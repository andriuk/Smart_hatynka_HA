  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'

  - platform: systemmonitor
    resources:
    - type: processor_use
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: last_boot
    - type: ipv4_address
      arg: wlan0
    - type: disk_free
      arg: /
    - type: processor_temperature

  - platform: influxdb
    host: 192.168.0.137
    port: 8086
    username: admin
    password: admin
    scan_interval: 3600
    queries:
      - name: InfluxDB Database Size
        unit_of_measurement: MB
        value_template: "{{ (value | float(0) / 1024 /1024) | round(1) }}"
        group_function: sum
        measurement: '"monitor"."shard"'
        database: _internal
        where: '"database"=''homeassistant'' AND time > now() - 5m'
        field: diskBytes
      
  - platform: template
    sensors:
      last_boot_custom:
        friendly_name: Послідня перезагрузка
        entity_id:
          - sensor.time
        value_template: >
          {% set uptime = as_timestamp (now())
          -as_timestamp(states.sensor.last_boot.state) | int %} {% set minutes =
          (( uptime % 3600) / 60) | int %} {% set hours = ((uptime % 86400) /
          3600) | int %} {% set days = (uptime / 86400) | int %}
            {% if uptime < 1 %}
              Меньше минуты
            {% else %}
              {% if days > 0 %}
                {{ days }} д.
              {% endif %}
              {% if hours > 0 %}
                {% if days > 0 %}
                  {{ ' ' }}
                {% endif %}
                {{ hours }} г.
              {% endif %}
              {% if minutes > 0 %}
                {% if days > 0 or hours > 0 %}
                  {{ ' ' }}
                {% endif %}
                  {{ minutes }} хвилини.
              {% endif %}
            {% endif %}

  - platform: template
    sensors:
       online_custom:
        friendly_name: "Home Assistant в онлайне - "
        entity_id:
          - sensor.time
        value_template: >
           {% set uptime = states.sensor.last_boot.state | int %}
           {% set minutes = (( uptime % 60) / 1) | int %}
           {% set hours = ((uptime % 1440) / 60) | int %}
           {% set days = (uptime / 1440) | int %}

             {% if uptime < 1 %}
               Меньше минуты
             {% else %}
               {% if days > 0 %}
                 {{ days }} д.
               {% endif %}
               {% if hours > 0 %}
                 {% if days > 0 %}
                   {{ ' ' }}
                 {% endif %}
                 {{ hours }} ч.
               {% endif %}
               {% if minutes > 0 %}
                 {% if days > 0 or hours > 0 %}
                   {{ ' ' }}
                 {% endif %}
                   {{ minutes }} мин.
               {% endif %}
             {% endif %}